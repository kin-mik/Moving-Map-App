{"ast":null,"code":"var _jsxFileName = \"/usr/src/app/react-map-app/src/components/LeftMenu.jsx\";\nimport React, { useState } from \"react\";\nimport { SearchBox } from \"./SearchBox\";\nimport { PinBox } from \"./PinBox\";\nimport { Tab, Tabs, TabList, TabPanel } from \"react-tabs\";\nimport \"react-tabs/style/react-tabs.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const LeftMenu = props => {\n  const {\n    pinMax,\n    pinNum,\n    searchValues,\n    setSearchValues,\n    pinValue,\n    setPinValue,\n    locations,\n    setLocations,\n    onChange\n  } = props;\n  const handlePin = index => {\n    if (searchValues[index] !== '') {\n      const geocoder = new window.google.maps.Geocoder();\n      geocoder.geocode({\n        address: searchValues[index]\n      }, (results, status) => {\n        if (status === \"OK\") {\n          const lat = results[0].geometry.location.lat();\n          const lng = results[0].geometry.location.lng();\n          const newPinValue = [...pinValue];\n          newPinValue[index] = {\n            lat,\n            lng\n          };\n          // console.log(newPinValue);\n          setPinValue(newPinValue);\n          const newLocations = [...locations];\n          newLocations[index] = {\n            \"name\": searchValues[index],\n            \"location\": {\n              \"lat\": lat,\n              \"lng\": lng\n            }\n          };\n          console.log(newLocations);\n          setLocations(newLocations);\n        } else {\n          alert(\"Geocode was not successful for the following reason: \" + status);\n        }\n      });\n    }\n  };\n  const handleSearchBoxChange = index => e => {\n    const newSearchValues = [...searchValues];\n    newSearchValues[index] = e.target.value;\n    setSearchValues(newSearchValues);\n  };\n\n  // const searchBoxes = Array(parseInt(pinMax)).fill().map((_, index) => {\n  //     if (index < pinNum) {\n  //         return (\n  //             <SearchBox key={index} index={index} searchValues={searchValues} handleSearchBoxChange={handleSearchBoxChange} handlePin={handlePin} />\n  //         );\n  //     }\n  // }\n  // );\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"left-menu\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"left-head\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"\\u30D4\\u30F3\\u306E\\u6570\\uFF1A\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          min: \"1\",\n          max: pinMax,\n          size: \"5\",\n          value: pinNum,\n          onChange: onChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this), \"\\u70B9\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Tabs, {\n      children: [/*#__PURE__*/_jsxDEV(TabList, {\n        children: [/*#__PURE__*/_jsxDEV(Tab, {\n          children: \"\\u5730\\u540D\\u3067\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Tab, {\n          children: \"\\u30D4\\u30F3\\u3067\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n        children: searchValues.map((item, index) => {\n          if (index < pinNum) {\n            return /*#__PURE__*/_jsxDEV(SearchBox, {\n              index: index,\n              searchValues: searchValues,\n              handleSearchBoxChange: handleSearchBoxChange,\n              handlePin: handlePin\n            }, item, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 33\n            }, this);\n          }\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TabPanel, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n};\n_c = LeftMenu;\nvar _c;\n$RefreshReg$(_c, \"LeftMenu\");","map":{"version":3,"names":["React","useState","SearchBox","PinBox","Tab","Tabs","TabList","TabPanel","jsxDEV","_jsxDEV","LeftMenu","props","pinMax","pinNum","searchValues","setSearchValues","pinValue","setPinValue","locations","setLocations","onChange","handlePin","index","geocoder","window","google","maps","Geocoder","geocode","address","results","status","lat","geometry","location","lng","newPinValue","newLocations","console","log","alert","handleSearchBoxChange","e","newSearchValues","target","value","className","children","type","min","max","size","fileName","_jsxFileName","lineNumber","columnNumber","map","item","_c","$RefreshReg$"],"sources":["/usr/src/app/react-map-app/src/components/LeftMenu.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { SearchBox } from \"./SearchBox\";\nimport { PinBox } from \"./PinBox\";\nimport { Tab, Tabs, TabList, TabPanel } from \"react-tabs\";\nimport \"react-tabs/style/react-tabs.css\";\n\nexport const LeftMenu = (props) => {\n    const { pinMax, pinNum, searchValues, setSearchValues, pinValue, setPinValue, locations, setLocations, onChange } = props;\n    const handlePin = (index) => {\n        if (searchValues[index] !== '') {\n            const geocoder = new window.google.maps.Geocoder();\n            geocoder.geocode(\n                {\n                    address: searchValues[index],\n                },\n                (results, status) => {\n                    if (status === \"OK\") {\n                        const lat = results[0].geometry.location.lat();\n                        const lng = results[0].geometry.location.lng();\n                        const newPinValue = [...pinValue];\n                        newPinValue[index] = { lat, lng };\n                        // console.log(newPinValue);\n                        setPinValue(newPinValue);\n                        const newLocations = [...locations];\n                        newLocations[index] = {\n                            \"name\": searchValues[index],\n                            \"location\": {\n                                \"lat\": lat,\n                                \"lng\": lng\n                            }\n                        }\n                        console.log(newLocations);\n                        setLocations(newLocations);\n\n                    } else {\n                        alert(\"Geocode was not successful for the following reason: \" + status);\n                    }\n                }\n            );\n        }\n    };\n\n\n    const handleSearchBoxChange = (index) => (e) => {\n        const newSearchValues = [...searchValues];\n        newSearchValues[index] = e.target.value;\n        setSearchValues(newSearchValues);\n    }\n\n\n    // const searchBoxes = Array(parseInt(pinMax)).fill().map((_, index) => {\n    //     if (index < pinNum) {\n    //         return (\n    //             <SearchBox key={index} index={index} searchValues={searchValues} handleSearchBoxChange={handleSearchBoxChange} handlePin={handlePin} />\n    //         );\n    //     }\n    // }\n    // );\n\n\n    return (\n        <div className=\"left-menu\">\n            <div className=\"left-head\">\n                <div>\n                    ピンの数：\n                    <input type=\"number\" min=\"1\" max={pinMax} size=\"5\" value={pinNum} onChange={onChange}\n                    />\n                    点\n                </div>\n            </div>\n            <Tabs >\n                <TabList>\n                    <Tab>地名で</Tab>\n                    <Tab>ピンで</Tab>\n                </TabList>\n\n                <TabPanel>\n                    {/* {searchBoxes} */}\n                    {searchValues.map((item, index) => {\n                        if (index < pinNum) {\n                            return (\n                                <SearchBox key={item} index={index} searchValues={searchValues} handleSearchBoxChange={handleSearchBoxChange} handlePin={handlePin} />\n                            );\n                        }\n                    })}\n\n\n                </TabPanel>\n                <TabPanel>\n\n                    {/* {pinBoxes} */}\n\n                </TabPanel>\n            </Tabs>\n\n        </div>\n    );\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}