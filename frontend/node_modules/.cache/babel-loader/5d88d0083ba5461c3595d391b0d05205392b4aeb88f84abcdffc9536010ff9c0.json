{"ast":null,"code":"var _jsxFileName = \"/usr/src/app/react-map-app/src/App.jsx\",\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\n// import GoogleMapReact from \"google-map-react\";\nimport { GoogleMap, LoadScript, Marker, Circle } from '@react-google-maps/api';\nimport { Header } from \"./components/Header\";\nimport { LeftMenu } from \"./components/LeftMenu\";\n// import MainContent from \"./MainContent\";\nimport \"./styles.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const App = () => {\n  _s2();\n  var _s = $RefreshSig$();\n  const pinMax = 5;\n  const [center, setCenter] = useState({\n    lat: 35.681167,\n    lng: 139.767052\n  });\n  const [zoom, setZoom] = useState(15);\n  const [searchValue, setSearchValue] = useState(\"\");\n  const [pinNum, setPinNum] = useState(3);\n  const [searchValues, setSearchValues] = useState(new Array(pinMax).fill(''));\n  const [pinValue, setPinValue] = useState(new Array(pinMax).fill(''));\n  // const [locations, setLocations] = useState([]);\n  const [locations, setLocations] = useState(new Array(pinMax).fill(''));\n  // const [showLocations, setShowLocations] = useState(false);\n  const onChangePinNum = e => setPinNum(e.target.value);\n  const mapStyles = {\n    height: \"100%\",\n    width: \"100%\"\n  };\n  const circleOptions = {\n    strokeColor: \"#FF0000\",\n    strokeOpacity: 0.8,\n    strokeWeight: 2,\n    fillColor: \"#FF0000\",\n    fillOpacity: 0.35,\n    clickable: false,\n    draggable: false,\n    editable: false,\n    visible: true,\n    radius: 30000,\n    zIndex: 1\n  };\n  const MemoizedGoogleMap = /*#__PURE__*/_s( /*#__PURE__*/React.memo(_s(_ref => {\n    _s();\n    let {\n      locations\n    } = _ref;\n    const memoizedLocations = React.useMemo(() => locations.filter(Boolean), [locations]);\n    return memoizedLocations.map((item, index) => {\n      console.log(locations);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Marker, {\n          position: item.location\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Circle, {\n          center: item.location,\n          radius: 1000,\n          options: circleOptions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this);\n    });\n  }, \"JdquUmw7j+GKpCWmdq1FQxqIgPY=\"), (prevProps, nextProps) => {\n    // locationsが同じ場合は再レンダリングしない\n    return prevProps.locations === nextProps.locations;\n  }), \"JdquUmw7j+GKpCWmdq1FQxqIgPY=\");\n\n  // 入力された地名をGeocoding APIを使用して経度緯度に変換し、center座標を更新\n  const handleSearch = () => {\n    const geocoder = new window.google.maps.Geocoder();\n    geocoder.geocode({\n      address: searchValue\n    }, (results, status) => {\n      if (status === \"OK\") {\n        const lat = results[0].geometry.location.lat();\n        const lng = results[0].geometry.location.lng();\n        setCenter({\n          lat,\n          lng\n        });\n      } else {\n        alert(\"Geocode was not successful for the following reason: \" + status);\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(LeftMenu, {\n        pinMax: pinMax,\n        pinNum: pinNum,\n        searchValues: searchValues,\n        setSearchValues: setSearchValues,\n        pinValue: pinValue,\n        setPinValue: setPinValue,\n        locations: locations,\n        setLocations: setLocations,\n        onChange: onChangePinNum\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-contents\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-area\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"\\u5730\\u56F3\\u3092\\u79FB\\u52D5\",\n            value: searchValue,\n            onChange: e => setSearchValue(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSearch,\n            children: \"\\u691C\\u7D22\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"map-area\",\n          children: /*#__PURE__*/_jsxDEV(LoadScript, {\n            googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY,\n            children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n              mapContainerStyle: mapStyles,\n              center: center,\n              zoom: zoom,\n              children: /*#__PURE__*/_jsxDEV(MemoizedGoogleMap, {\n                locations: locations\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 16\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s2(App, \"KLkB6Gff/89mLOLsMKvRy8fWsnE=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","GoogleMap","LoadScript","Marker","Circle","Header","LeftMenu","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s2","_s","$RefreshSig$","pinMax","center","setCenter","lat","lng","zoom","setZoom","searchValue","setSearchValue","pinNum","setPinNum","searchValues","setSearchValues","Array","fill","pinValue","setPinValue","locations","setLocations","onChangePinNum","e","target","value","mapStyles","height","width","circleOptions","strokeColor","strokeOpacity","strokeWeight","fillColor","fillOpacity","clickable","draggable","editable","visible","radius","zIndex","MemoizedGoogleMap","memo","_ref","memoizedLocations","useMemo","filter","Boolean","map","item","index","console","log","children","position","location","fileName","_jsxFileName","lineNumber","columnNumber","options","prevProps","nextProps","handleSearch","geocoder","window","google","maps","Geocoder","geocode","address","results","status","geometry","alert","className","onChange","placeholder","onClick","googleMapsApiKey","process","env","REACT_APP_GOOGLE_MAPS_API_KEY","mapContainerStyle","_c","$RefreshReg$"],"sources":["/usr/src/app/react-map-app/src/App.jsx"],"sourcesContent":["import React, { useState , useEffect} from \"react\";\n// import GoogleMapReact from \"google-map-react\";\nimport { GoogleMap, LoadScript, Marker, Circle } from '@react-google-maps/api';\nimport { Header } from \"./components/Header\";\nimport { LeftMenu } from \"./components/LeftMenu\";\n// import MainContent from \"./MainContent\";\nimport \"./styles.css\";\n\n\n\nexport const App = () => {\n  const pinMax = 5;\n  const [center, setCenter] = useState({ lat: 35.681167, lng: 139.767052 });\n  const [zoom, setZoom] = useState(15);\n  const [searchValue, setSearchValue] = useState(\"\");\n  const [pinNum, setPinNum] = useState(3);\n  const [searchValues, setSearchValues] = useState(new Array(pinMax).fill(''));\n  const [pinValue, setPinValue] = useState(new Array(pinMax).fill(''));\n  // const [locations, setLocations] = useState([]);\n  const [locations, setLocations] = useState(new Array(pinMax).fill(''));\n  // const [showLocations, setShowLocations] = useState(false);\n  const onChangePinNum = (e) => setPinNum(e.target.value);\n  const mapStyles = {\n    height: \"100%\",\n    width: \"100%\"\n  };\n  const circleOptions = {\n    strokeColor: \"#FF0000\",\n    strokeOpacity: 0.8,\n    strokeWeight: 2,\n    fillColor: \"#FF0000\",\n    fillOpacity: 0.35,\n    clickable: false,\n    draggable: false,\n    editable: false,\n    visible: true,\n    radius: 30000,\n    zIndex: 1,\n  };\n\n  const MemoizedGoogleMap = React.memo(({ locations }) => {\n    const memoizedLocations = React.useMemo(\n      () => locations.filter(Boolean),\n      [locations]\n    );\n  \n    return memoizedLocations.map((item, index) => {\n      console.log(locations);\n      return (\n        <div key={index}>\n          <Marker position={item.location} />\n          <Circle center={item.location} radius={1000} options={circleOptions} />\n        </div>\n      );\n    });\n  }, (prevProps, nextProps) => {\n    // locationsが同じ場合は再レンダリングしない\n    return prevProps.locations === nextProps.locations;\n  });\n\n  // 入力された地名をGeocoding APIを使用して経度緯度に変換し、center座標を更新\n  const handleSearch = () => {\n    const geocoder = new window.google.maps.Geocoder();\n    geocoder.geocode(\n      {\n        address: searchValue,\n      },\n      (results, status) => {\n        if (status === \"OK\") {\n          const lat = results[0].geometry.location.lat();\n          const lng = results[0].geometry.location.lng();\n          setCenter({ lat, lng });\n        } else {\n          alert(\"Geocode was not successful for the following reason: \" + status);\n        }\n      }\n    );\n  };\n\n\n  return (\n    <>\n      <Header />\n      <div className=\"container\">\n        <LeftMenu\n          pinMax={pinMax}\n          pinNum={pinNum}\n          searchValues={searchValues}\n          setSearchValues={setSearchValues}\n          pinValue={pinValue}\n          setPinValue={setPinValue}\n          locations={locations}\n          setLocations={setLocations}\n          onChange={onChangePinNum}\n        />\n        <div className=\"main-contents\">\n          <div className=\"input-area\">\n            <input\n              placeholder=\"地図を移動\"\n              value={searchValue}\n              onChange={(e) => setSearchValue(e.target.value)}\n            />\n            <button onClick={handleSearch}>検索</button>\n          </div>\n          <div className=\"map-area\">\n\n            <LoadScript\n              googleMapsApiKey={process.env.REACT_APP_GOOGLE_MAPS_API_KEY}\n            >\n              <GoogleMap mapContainerStyle={mapStyles} center={center} zoom={zoom}>\n              {<MemoizedGoogleMap locations={locations} />}\n              </GoogleMap>\n            </LoadScript>\n          </div>\n        </div>\n      </div>\n    </>\n  )\n\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}